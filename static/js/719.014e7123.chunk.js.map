{"version":3,"file":"static/js/719.014e7123.chunk.js","mappings":"wOAEaA,GAAOC,EAAAA,EAAAA,IAAK,CACvBC,IAAK,OACLC,QAAS,KAGEC,GAAWH,EAAAA,EAAAA,IAAK,CAC3BC,IAAK,WACLC,QAAS,KAEEE,GAAOJ,EAAAA,EAAAA,IAAK,CACvBC,IAAK,OACLC,QAAS,YAEEG,GAAOL,EAAAA,EAAAA,IAAK,CACvBC,IAAK,OACLC,QAAS,I,oICyBX,UAlCkB,WAChB,OAAgCI,EAAAA,EAAAA,IAAeP,EAAAA,IAA/C,eAAOQ,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,aAAc,SACdC,OAAQ,SALZ,UAQE,UAAC,KAAD,YACE,eAAIC,UAAU,QAAd,iEACA,kBACEC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAYW,EAAEC,OAAOH,MAA5B,EACVD,UAAU,yBAEZ,gBAAKA,UAAU,aAAf,UACE,iBAAMK,QAvBD,WACI,KAAbd,GACFE,EAAS,0BAEZ,EAmBS,8CAMX,C,8HCpCKa,EAAmBC,EAAAA,YAAiB,WAMvCC,GAAQ,IALTC,EAKS,EALTA,SACAT,EAIS,EAJTA,UAIS,IAFTU,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,OACjDM,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAH,OAAMN,EAAN,SACVO,EAAU,GAiBhB,OAhBAL,EAAYM,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYZ,EAAMU,UACjBV,EAAMU,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAQH,IAAaL,EAAb,WAAiCK,GAAa,GAChD,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,GACzD,KACmBI,EAAAA,EAAAA,KAAKhB,GAAD,QAAC,QACvBH,IAAKA,GACFI,GAFmB,IAGtBZ,UAAW4B,IAAAA,WAAA,GAAW5B,EAAWa,GAAtB,OAA4CO,MAE1D,IACDd,EAAIuB,YAAc,MAClB,K","sources":["atom/atom.js","pages/participatingNecklace/InputName.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { atom } from 'recoil';\n\nexport const name = atom({\n  key: 'name', // unique ID (with respect to other atoms/selectors)\n  default: '', // default value (aka initial value)\n});\n\nexport const nickname = atom({\n  key: 'nickname', // unique ID (with respect to other atoms/selectors)\n  default: '', // default value (aka initial value)\n});\nexport const part = atom({\n  key: 'part', // unique ID (with respect to other atoms/selectors)\n  default: 'Node.JS', // default value (aka initial value)\n});\nexport const univ = atom({\n  key: 'univ', // unique ID (with respect to other atoms/selectors)\n  default: '', // default value (aka initial value)\n});\n","import { useSelector } from 'react-redux';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { MainWrap } from '../../components/default/styled';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { name } from '../../atom/atom';\nconst InputName = () => {\n  const [userName, setUserName] = useRecoilState(name);\n  const navigate = useNavigate();\n  const goNext = () => {\n    if (userName !== '') {\n      navigate('/necklace/inputnickname');\n    }\n  };\n  return (\n    <Container>\n      <Row\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignContent: 'center',\n          height: '100vh',\n        }}\n      >\n        <MainWrap>\n          <h2 className='title'>이름이 무엇인가요?</h2>\n          <input\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            className='inputBox boxDefault'\n          />\n          <div className='nextButton'>\n            <span onClick={goNext}>다음으로</span>\n          </div>\n        </MainWrap>\n      </Row>\n    </Container>\n  );\n};\n\nexport default InputName;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["name","atom","key","default","nickname","part","univ","useRecoilState","userName","setUserName","navigate","useNavigate","style","display","justifyContent","alignContent","height","className","value","onChange","e","target","onClick","Row","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}